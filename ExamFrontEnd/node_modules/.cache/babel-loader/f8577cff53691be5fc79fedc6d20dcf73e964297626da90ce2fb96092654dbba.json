{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/atos/Task/ExamFrontEnd/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nvar VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nvar VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nvar VALIDATOR_TYPE_MIN = 'MIN';\nvar VALIDATOR_TYPE_MAX = 'MAX';\nvar VALIDATOR_TYPE_EMAIL = 'EMAIL';\nvar VALIDATOR_TYPE_FILE = 'FILE';\nexport var VALIDATOR_REQUIRE = function VALIDATOR_REQUIRE() {\n  return {\n    type: VALIDATOR_TYPE_REQUIRE\n  };\n};\n_c = VALIDATOR_REQUIRE;\nexport var VALIDATOR_FILE = function VALIDATOR_FILE() {\n  return {\n    type: VALIDATOR_TYPE_FILE\n  };\n};\n_c2 = VALIDATOR_FILE;\nexport var VALIDATOR_MINLENGTH = function VALIDATOR_MINLENGTH(val) {\n  return {\n    type: VALIDATOR_TYPE_MINLENGTH,\n    val: val\n  };\n};\n_c3 = VALIDATOR_MINLENGTH;\nexport var VALIDATOR_MAXLENGTH = function VALIDATOR_MAXLENGTH(val) {\n  return {\n    type: VALIDATOR_TYPE_MAXLENGTH,\n    val: val\n  };\n};\n_c4 = VALIDATOR_MAXLENGTH;\nexport var VALIDATOR_MIN = function VALIDATOR_MIN(val) {\n  return {\n    type: VALIDATOR_TYPE_MIN,\n    val: val\n  };\n};\n_c5 = VALIDATOR_MIN;\nexport var VALIDATOR_MAX = function VALIDATOR_MAX(val) {\n  return {\n    type: VALIDATOR_TYPE_MAX,\n    val: val\n  };\n};\n_c6 = VALIDATOR_MAX;\nexport var VALIDATOR_EMAIL = function VALIDATOR_EMAIL() {\n  return {\n    type: VALIDATOR_TYPE_EMAIL\n  };\n};\n_c7 = VALIDATOR_EMAIL;\nexport var validate = function validate(value, validators) {\n  var isValid = true;\n  var _iterator = _createForOfIteratorHelper(validators),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var validator = _step.value;\n      if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n        isValid = isValid && value.trim().length > 0;\n      }\n      if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n        isValid = isValid && value.trim().length >= validator.val;\n      }\n      if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n        isValid = isValid && value.trim().length <= validator.val;\n      }\n      if (validator.type === VALIDATOR_TYPE_MIN) {\n        isValid = isValid && +value >= validator.val;\n      }\n      if (validator.type === VALIDATOR_TYPE_MAX) {\n        isValid = isValid && +value <= validator.val;\n      }\n      if (validator.type === VALIDATOR_TYPE_EMAIL) {\n        isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return isValid;\n};\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"VALIDATOR_REQUIRE\");\n$RefreshReg$(_c2, \"VALIDATOR_FILE\");\n$RefreshReg$(_c3, \"VALIDATOR_MINLENGTH\");\n$RefreshReg$(_c4, \"VALIDATOR_MAXLENGTH\");\n$RefreshReg$(_c5, \"VALIDATOR_MIN\");\n$RefreshReg$(_c6, \"VALIDATOR_MAX\");\n$RefreshReg$(_c7, \"VALIDATOR_EMAIL\");","map":{"version":3,"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_MIN","VALIDATOR_TYPE_MAX","VALIDATOR_TYPE_EMAIL","VALIDATOR_TYPE_FILE","VALIDATOR_REQUIRE","type","_c","VALIDATOR_FILE","_c2","VALIDATOR_MINLENGTH","val","_c3","VALIDATOR_MAXLENGTH","_c4","VALIDATOR_MIN","_c5","VALIDATOR_MAX","_c6","VALIDATOR_EMAIL","_c7","validate","value","validators","isValid","_iterator","_createForOfIteratorHelper","_step","s","n","done","validator","trim","length","test","err","e","f","$RefreshReg$"],"sources":["D:/atos/Task/ExamFrontEnd/src/validators/validators.js"],"sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}