{"ast":null,"code":"import _regeneratorRuntime from \"D:/atos/Task/ExamFrontEnd/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/atos/Task/ExamFrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/atos/Task/ExamFrontEnd/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"D:\\\\atos\\\\Task\\\\ExamFrontEnd\\\\src\\\\user\\\\pages\\\\Login.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/input/Input';\nimport Button from '../../shared/components/Button/Button';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../validators/validators';\nimport { useForm } from '../../shared/Hooks/form-hook';\nimport { AuthContext } from './auth-context';\nimport './Auth.css';\nimport axios from \"axios\";\n// import {\n//   Route,\n//   Switch\n// } from 'react-router-dom';\n// import Users from '../../user/pages/Users';\n// import UserQuestion from '../../questions/pages/UserQuestion';\n// import NewQuestion from '../../questions/pages/NewQuestion';\n// import UpdateQuestion from '../../questions/pages/UpdateQuestion';\n// import GetAllQuestions from '../../questions/pages/GetAllQuestions';\nimport ErrorModel from '../../Model/ErorrModel';\n//CHECK IF USER TYPE TEACHER THEN REDIECT TO QUESTIONS PAGES ELSE SIGN UP FIRST\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Login = function Login() {\n  _s();\n  var auth = useContext(AuthContext);\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoginMode = _useState2[0],\n    setIsLoginMode = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useForm = useForm({\n      username: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    }, false),\n    _useForm2 = _slicedToArray(_useForm, 3),\n    formState = _useForm2[0],\n    inputHandler = _useForm2[1],\n    setFormData = _useForm2[2];\n\n  // const authSubmitHandler = event => {\n  //   event.preventDefault();\n  //   console.log(formState.inputs);\n  //   auth.login();\n  // };\n\n  var authSubmitHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n      var response, resData, token;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            // setIsLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.post(\"http://localhost:3000/api/users/login\", {\n              // method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                name: formState.inputs.username.value,\n                password: formState.inputs.password.value\n              })\n            });\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.data;\n          case 7:\n            resData = _context.sent;\n            token = resData.token;\n            localStorage.setItem('token', token);\n            if (!(response.status !== 201)) {\n              _context.next = 12;\n              break;\n            }\n            throw new Error(resData.message);\n          case 12:\n            // setIsLoading(false);\n            auth.login(resData.userId, resData.userType);\n            // auth.login(resData.userType)\n            auth.userType = resData.userType;\n            // console.log(\"test in login page\");\n            // console.log(auth.userType)\n            _context.next = 20;\n            break;\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](1);\n            setIsLoading(false);\n            // console.log(\"error in catchhhhhhhh\")\n            setError('Something went wrong, please try again.');\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 16]]);\n    }));\n    return function authSubmitHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var errorHandler = function errorHandler() {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModel, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"username\",\n          type: \"text\",\n          label: \"Username\",\n          validators: [VALIDATOR_REQUIRE],\n          errorText: \"Please enter a valid username.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          validators: [VALIDATOR_MINLENGTH(5)],\n          errorText: \"Please enter a valid password, at least 5 characters.\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, _this);\n};\n_s(Login, \"M6qFJ4XbXNhSRa0BG5N0Z2X5CtQ=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","Card","Input","Button","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","axios","ErrorModel","jsxDEV","_jsxDEV","Login","_s","auth","_useState","_useState2","_slicedToArray","isLoginMode","setIsLoginMode","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useForm","username","value","isValid","password","_useForm2","formState","inputHandler","setFormData","authSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","response","resData","token","wrap","_callee$","_context","prev","next","preventDefault","post","headers","body","JSON","stringify","name","inputs","sent","data","localStorage","setItem","status","Error","message","login","userId","userType","t0","stop","_x","apply","arguments","errorHandler","Fragment","children","onClear","fileName","_jsxFileName","lineNumber","columnNumber","_this","className","onSubmit","element","id","type","label","validators","errorText","onInput","disabled","_c","$RefreshReg$"],"sources":["D:/atos/Task/ExamFrontEnd/src/user/pages/Login.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/input/Input';\nimport Button from '../../shared/components/Button/Button';\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../validators/validators';\nimport { useForm } from '../../shared/Hooks/form-hook';\nimport { AuthContext } from './auth-context';\nimport './Auth.css';\nimport axios from \"axios\";\n// import {\n//   Route,\n//   Switch\n// } from 'react-router-dom';\n// import Users from '../../user/pages/Users';\n// import UserQuestion from '../../questions/pages/UserQuestion';\n// import NewQuestion from '../../questions/pages/NewQuestion';\n// import UpdateQuestion from '../../questions/pages/UpdateQuestion';\n// import GetAllQuestions from '../../questions/pages/GetAllQuestions';\nimport ErrorModel from '../../Model/ErorrModel';\n//CHECK IF USER TYPE TEACHER THEN REDIECT TO QUESTIONS PAGES ELSE SIGN UP FIRST\nconst Login = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      username: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  // const authSubmitHandler = event => {\n  //   event.preventDefault();\n  //   console.log(formState.inputs);\n  //   auth.login();\n  // };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    // setIsLoading(true);\n\n      try {\n        const response = await axios.post(\"http://localhost:3000/api/users/login\", {\n          // method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: formState.inputs.username.value,\n            password: formState.inputs.password.value\n\n          })\n        });\n        const resData = await response.data;\n        \n        let token = resData.token;\n        localStorage.setItem('token', token);\n\n        if (response.status!==201) {\n          \n          throw new Error(resData.message);\n          \n        }\n        \n        \n        // setIsLoading(false);\n        auth.login(resData.userId,resData.userType);\n        // auth.login(resData.userType)\n        auth.userType=resData.userType;\n        // console.log(\"test in login page\");\n        // console.log(auth.userType)\n      } catch (err) {\n        setIsLoading(false);\n        // console.log(\"error in catchhhhhhhh\")\n        setError( 'Something went wrong, please try again.');\n      }\n    \n\n    // }\n    // catch (err) {\n    //   console.log(err);\n    // }\n\n    // auth.login();\n    // console.log(formState.inputs);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n\n  return (\n    <React.Fragment>\n      <ErrorModel error={error} onClear={errorHandler} />\n\n      <Card className=\"authentication\">\n        {/* {isLoading && <LoadingSpinner asOverlay />} */}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          <Input\n            element=\"input\"\n            id=\"username\"\n            type=\"text\"\n            label=\"Username\"\n            validators={[VALIDATOR_REQUIRE]}\n            errorText=\"Please enter a valid username.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid password, at least 5 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            LOGIN\n          </Button>\n        </form>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}